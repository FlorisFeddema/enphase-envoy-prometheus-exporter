name: Release application

on:
  workflow_dispatch:

env:
  VERSION: 0.0.1

jobs:
  build:
    name: Build
    runs-on: ubuntu-22.04

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.19'

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Verify dependencies
        run: go mod verify

      - name: Build application
        run: go build .

      - name: Run unit tests
        run: go test ./... -coverprofile=coverage.out

      - name: Run vet
        run: go vet .

      - name: Install linter
        run: go install golang.org/x/lint/golint@latest

      - name: Run linter
        run: golint ./...

  release:
    name: Release
    runs-on: ubuntu-22.04
    needs: build

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup git config
        run: |
          git config user.name "Floris Feddema"
          git config user.email "admin@feddema.dev"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: linux/amd64
      #          platforms: linux/amd64,linux/arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          platforms: linux/amd64
      #          platforms: linux/amd64,linux/arm64

      - name: Login docker registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64
          #          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/florisfeddema/enphase-envoy-prometheus-exporter:latest
            ghcr.io/florisfeddema/enphase-envoy-prometheus-exporter:${{ env.VERSION }}
          push: true

      - name: Update version in Chart.yaml
        uses: fjogeleit/yaml-update-action@main
        with:
          valueFile: 'charts/enphase-envoy-prometheus-exporter/Chart.yaml'
          propertyPath: 'version'
          value: ${{ env.VERSION }}
          message: 'Update Image Version to ${{ steps.image.outputs.version }}'
          commitChange: true
          branch: main
          token: ${{ secrets.GITHUB_TOKEN }}

#      - name: Release chart
#        uses: helm/chart-releaser-action@v1.5.0
#        with:
#          charts_dir: charts
#        env:
#          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
